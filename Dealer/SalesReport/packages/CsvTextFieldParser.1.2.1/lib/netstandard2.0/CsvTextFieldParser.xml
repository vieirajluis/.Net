<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CsvTextFieldParser</name>
    </assembly>
    <members>
        <member name="T:NotVisualBasic.FileIO.CsvTextFieldParser">
            <summary>
            Parses comma-delimited text files.
            </summary>
            <remarks>
            Based on <code>Microsoft.VisualBasic.FileIO.TextFieldParser</code>.
            </remarks>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.#ctor(System.IO.Stream)">
            <summary>
            Constructs a parser from the specified input stream.
            </summary>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Constructs a parser from the specified input stream with the specified encoding.
            </summary>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Constructs a parser from the specified input stream with the specified encoding and byte order mark detection option.
            </summary>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
            <summary>
            Constructs a parser from the specified input stream with the specified encoding and byte order mark detection option, and optionally leaves the stream open.
            </summary>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.#ctor(System.String)">
            <summary>
            Constructs a parser from the specified input file path.
            </summary>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Constructs a parser from the specified input file path with the specified encoding.
            </summary>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Constructs a parser from the specified input file path with the specified encoding and byte order mark detection option.
            </summary>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.#ctor(System.IO.TextReader)">
            <summary>
            Constructs a parser from the specified input text reader.
            </summary>
        </member>
        <member name="P:NotVisualBasic.FileIO.CsvTextFieldParser.EndOfData">
            <summary>
            True if there are non-empty lines between the current cursor position and the end of the file.
            </summary>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.ReadFields">
            <summary>
            Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.
            </summary>
            <returns>An array of strings that contains field values for the current line, or null if <see cref="P:NotVisualBasic.FileIO.CsvTextFieldParser.EndOfData"/> is true.</returns>
            <exception cref="T:NotVisualBasic.FileIO.CsvMalformedLineException">if the parse of the current line failed</exception>
        </member>
        <member name="P:NotVisualBasic.FileIO.CsvTextFieldParser.LineNumber">
            <summary>
            The number of the line that will be returned by <see cref="M:NotVisualBasic.FileIO.CsvTextFieldParser.ReadFields"/> (starting at 1), or -1 if there are no more lines.
            </summary>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.Close">
            <summary>
            Closes the current <see cref="T:NotVisualBasic.FileIO.CsvTextFieldParser"/> object.
            </summary>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.Dispose">
            <summary>
            Closes and disposes the current <see cref="T:NotVisualBasic.FileIO.CsvTextFieldParser"/> object.
            </summary>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.Dispose(System.Boolean)">
            <summary>
            Disposes of the current <see cref="T:NotVisualBasic.FileIO.CsvTextFieldParser"/> object.
            </summary>
            <param name="disposing">true if called from <see cref="M:NotVisualBasic.FileIO.CsvTextFieldParser.Dispose"/>, or false if called from a finalizer</param>
        </member>
        <member name="P:NotVisualBasic.FileIO.CsvTextFieldParser.ErrorLine">
            <summary>
            The line that caused the most recent <see cref="T:NotVisualBasic.FileIO.CsvMalformedLineException"/>.
            </summary>
            <remarks>
            If no <see cref="T:NotVisualBasic.FileIO.CsvMalformedLineException"/> exceptions have been thrown, an empty string is returned.
            The <see cref="P:NotVisualBasic.FileIO.CsvTextFieldParser.ErrorLineNumber"/> property can be used to display the number of the line that caused the exception.
            </remarks>
        </member>
        <member name="P:NotVisualBasic.FileIO.CsvTextFieldParser.ErrorLineNumber">
            <summary>
            Returns the number of the line that caused the most recent <see cref="T:NotVisualBasic.FileIO.CsvMalformedLineException"/> exception.
            </summary>
            <remarks>
            If no <see cref="T:NotVisualBasic.FileIO.CsvMalformedLineException"/> exceptions have been thrown, -1 is returned.
            The <see cref="P:NotVisualBasic.FileIO.CsvTextFieldParser.ErrorLine"/> property can be used to display the number of the line that caused the exception.
            Blank lines and comments are not ignored when determining the line number.
            </remarks>
        </member>
        <member name="P:NotVisualBasic.FileIO.CsvTextFieldParser.CompatibilityMode">
            <summary>
            True if this parser should exactly reproduce the behavior of the <code>Microsoft.VisualBasic.FileIO.TextFieldParser</code>.
            Defaults to <code>false</code>.
            </summary>
        </member>
        <member name="P:NotVisualBasic.FileIO.CsvTextFieldParser.Delimiters">
            <summary>
            Defines the delimiters for a text file.
            Default is a comma.
            </summary>
            <remarks>
            This is defined as an array of strings for compatibility with <code>Microsoft.VisualBasic.FileIO.TextFieldParser</code>,
            but this parser only supports one single-character delimiter.
            </remarks>
            <exception cref="T:System.ArgumentException">A delimiter value is set to a newline character, an empty string, or null.</exception>
            <exception cref="T:System.NotSupportedException">The delimiters are set to an array that does not contain exactly one element with exactly one character.</exception>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.SetDelimiter(System.Char)">
            <summary>
            Sets the delimiter character used by this parser.
            Default is a comma.
            </summary>
            <exception cref="T:System.ArgumentException">The delimiter character is set to a newline character.</exception>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.SetQuoteCharacter(System.Char)">
            <summary>
            Sets the quote character used by this parser, and also sets the quote escape character to match if it previously matched.
            Default is a double quote character.
            </summary>
            <exception cref="T:System.ArgumentException">The quote character is set to a newline character.</exception>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvTextFieldParser.SetQuoteEscapeCharacter(System.Char)">
            <summary>
            Sets the quote escape character used by this parser.
            Default is the same as the quote character, a double quote character.
            </summary>
            <exception cref="T:System.ArgumentException">The quote escape character is set to a newline character.</exception>
        </member>
        <member name="P:NotVisualBasic.FileIO.CsvTextFieldParser.HasFieldsEnclosedInQuotes">
            <summary>
            Denotes whether fields are enclosed in quotation marks when a CSV file is being parsed.
            Defaults to <code>true</code>.
            </summary>
        </member>
        <member name="P:NotVisualBasic.FileIO.CsvTextFieldParser.TrimWhiteSpace">
            <summary>
            Indicates whether leading and trailing white space should be trimmed from field values.
            Defaults to <code>false</code>.
            </summary>
        </member>
        <member name="T:NotVisualBasic.FileIO.CsvMalformedLineException">
            <summary>
            An exception that is thrown when the <see cref="M:NotVisualBasic.FileIO.CsvTextFieldParser.ReadFields"/> method cannot parse a row using the specified format.
            </summary>
            <remarks>
            Based on <code>Microsoft.VisualBasic.FileIO.MalformedLineException.MalformedLineException</code>.
            </remarks>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvMalformedLineException.#ctor(System.String,System.Int64)">
            <summary>
            Constructs an exception with a specified message and a line number.
            </summary>
        </member>
        <member name="M:NotVisualBasic.FileIO.CsvMalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
            <summary>
            Constructs an exception with a specified message, a line number, and a reference to the inner exception that is the cause of this exception.
            </summary>
        </member>
        <member name="P:NotVisualBasic.FileIO.CsvMalformedLineException.LineNumber">
            <summary>
            The line number of the malformed line.
            </summary>
        </member>
    </members>
</doc>
